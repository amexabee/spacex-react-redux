/* eslint-disable no-unused-vars */
/* eslint-disable no-param-reassign */
import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

const FETCH_ROCKETS_URL = 'https://api.spacexdata.com/v3/rockets';
const FETCH_ROCKETS = 'rockets/getRockets';

const initialState = {
  rockets: [],
  loading: false,
  rocketFetched: false,
  error: null,
};

const getRockets = createAsyncThunk(
  FETCH_ROCKETS,
  async (_, thunkAPI) => {
    const response = await fetch(FETCH_ROCKETS_URL).then(
      (data) => data.json(),
    );
    console.log('response', response);
    return response;
  },
);

const rocketsSlice = createSlice({
  name: 'rockets',
  initialState,
  reducers: {},
  extraReducers: (builder) => {
    builder
      .addCase(getRockets.pending, (state, action) => {
        state.loading = true;
      })
      .addCase(getRockets.fulfilled, (state, action) => {
        state.loading = false;
        state.entities = [state.rockets, ...action.payload];
        state.rocketFetched = true;
      })
      .addCase(getRockets.rejected, (state, action) => {
        state.loading = false;
        state.error = action.error.message;
      });
  },
});

export { getRockets, rocketsSlice };
